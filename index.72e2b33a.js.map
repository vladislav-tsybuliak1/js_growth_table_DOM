{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,gBAC/B,EAAK,EAAM,aAAa,CAAC,MACzB,EAAK,EAAM,aAAa,CAAC,MAEzB,EAAO,SAAS,gBAAgB,CAAC,WACjC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAK5C,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,SAAC,CAA/B,EACE,IAAM,EAAU,EAAE,MAAM,CAAC,SAAS,CAC5B,EAAO,EAAM,IAAI,CACjB,EAAY,EAAK,MAAM,CACvB,EAAY,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAEtC,GAAI,EAAQ,QAAQ,CAAC,cACnB,EAAM,WAAW,CAAC,EAAG,SAAS,CAAC,CAAA,IAC/B,EAAa,eAAe,CAAC,YAEzB,EAAY,IAbJ,IAcV,CAAA,EAAI,QAAQ,CAAG,CAAA,CADjB,OAGK,GAAI,EAAQ,QAAQ,CAAC,cAC1B,EAAM,gBAAgB,CAAC,MAAM,GAC7B,EAAa,eAAe,CAAC,YAEzB,EAAY,GArBJ,GAsBV,CAAA,EAAI,QAAQ,CAAG,CAAA,CADjB,OAGK,GAAI,EAAQ,QAAQ,CAAC,iBAAkB,CACvC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,WAAW,CAAC,EAAG,SAAS,CAAC,CAAA,G,C,M,E,CAD1B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,EAAa,eAAe,CAAC,YAEzB,EAAY,IA7BJ,IA8BV,CAAA,EAAI,QAAQ,CAAG,CAAA,CADjB,CAGF,MAAO,GAAI,EAAQ,QAAQ,CAAC,iBAAkB,CACvC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,gBAAgB,CAAC,MAAM,E,C,M,E,CADxB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,EAAa,eAAe,CAAC,YAEzB,EAAY,GAvCJ,GAwCV,CAAA,EAAI,QAAQ,CAAG,CAAA,CADjB,CAGF,CACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\".field tbody\");\nvar tr = table.querySelector(\"tr\");\nvar td = table.querySelector(\"td\");\nvar btns = document.querySelectorAll(\".button\");\nvar removeRowBtn = document.querySelector(\".remove-row\");\nvar appendRowBtn = document.querySelector(\".append-row\");\nvar removeColBtn = document.querySelector(\".remove-column\");\nvar appendColBtn = document.querySelector(\".append-column\");\nvar minAmount = 2;\nvar maxAmount = 10;\nbtns.forEach(function(btn) {\n    btn.addEventListener(\"click\", function(e) {\n        var clsList = e.target.classList;\n        var rows = table.rows;\n        var rowAmount = rows.length;\n        var colAmount = rows[0].cells.length;\n        if (clsList.contains(\"append-row\")) {\n            table.appendChild(tr.cloneNode(true));\n            removeRowBtn.removeAttribute(\"disabled\");\n            if (rowAmount + 1 === maxAmount) btn.disabled = true;\n        } else if (clsList.contains(\"remove-row\")) {\n            table.lastElementChild.remove();\n            appendRowBtn.removeAttribute(\"disabled\");\n            if (rowAmount - 1 === minAmount) btn.disabled = true;\n        } else if (clsList.contains(\"append-column\")) {\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var row = _step.value;\n                    row.appendChild(td.cloneNode(true));\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            removeColBtn.removeAttribute(\"disabled\");\n            if (colAmount + 1 === maxAmount) btn.disabled = true;\n        } else if (clsList.contains(\"remove-column\")) {\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                for(var _iterator1 = rows[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var row1 = _step1.value;\n                    row1.lastElementChild.remove();\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            appendColBtn.removeAttribute(\"disabled\");\n            if (colAmount - 1 === minAmount) btn.disabled = true;\n        }\n    });\n});\n\n//# sourceMappingURL=index.72e2b33a.js.map\n","'use strict';\n\nconst table = document.querySelector('.field tbody');\nconst tr = table.querySelector('tr');\nconst td = table.querySelector('td');\n\nconst btns = document.querySelectorAll('.button');\nconst removeRowBtn = document.querySelector('.remove-row');\nconst appendRowBtn = document.querySelector('.append-row');\nconst removeColBtn = document.querySelector('.remove-column');\nconst appendColBtn = document.querySelector('.append-column');\n\nconst minAmount = 2;\nconst maxAmount = 10;\n\nbtns.forEach((btn) => {\n  btn.addEventListener('click', (e) => {\n    const clsList = e.target.classList;\n    const rows = table.rows;\n    const rowAmount = rows.length;\n    const colAmount = rows[0].cells.length;\n\n    if (clsList.contains('append-row')) {\n      table.appendChild(tr.cloneNode(true));\n      removeRowBtn.removeAttribute('disabled');\n\n      if (rowAmount + 1 === maxAmount) {\n        btn.disabled = true;\n      }\n    } else if (clsList.contains('remove-row')) {\n      table.lastElementChild.remove();\n      appendRowBtn.removeAttribute('disabled');\n\n      if (rowAmount - 1 === minAmount) {\n        btn.disabled = true;\n      }\n    } else if (clsList.contains('append-column')) {\n      for (const row of rows) {\n        row.appendChild(td.cloneNode(true));\n      }\n      removeColBtn.removeAttribute('disabled');\n\n      if (colAmount + 1 === maxAmount) {\n        btn.disabled = true;\n      }\n    } else if (clsList.contains('remove-column')) {\n      for (const row of rows) {\n        row.lastElementChild.remove();\n      }\n      appendColBtn.removeAttribute('disabled');\n\n      if (colAmount - 1 === minAmount) {\n        btn.disabled = true;\n      }\n    }\n  });\n});\n"],"names":["table","document","querySelector","tr","td","btns","querySelectorAll","removeRowBtn","appendRowBtn","removeColBtn","appendColBtn","forEach","btn","addEventListener","e","clsList","target","classList","rows","rowAmount","length","colAmount","cells","contains","appendChild","cloneNode","removeAttribute","disabled","lastElementChild","remove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","row1"],"version":3,"file":"index.72e2b33a.js.map"}